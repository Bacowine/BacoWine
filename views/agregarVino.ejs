<!DOCTYPE html>
<html>

<head>
  <%- include('./partials/_head',{title:'Agregar Vino'}); %>
</head>
<style>
  
  /*the container must be positioned relative:*/
  .autocomplete {
    position: relative;
  }
  
  input {
    border: 1px solid transparent;
    background-color: #f1f1f1;
  }
  
  .autocomplete-items {
    position: absolute;
    border-bottom: none;
    border-top: none;
    z-index: 99;
    /*position the autocomplete items to be the same width as the container:*/
    top: 100%;
    left: 0;
    right: 0;
    color: black;
    padding: 2px;
  }
  
  .autocomplete-items div {
    padding: 10px;
    cursor: pointer;
    background-color: #fff; 
    border-bottom: 1px solid #d4d4d4; 
  }
  
  /*when hovering an item:*/
  .autocomplete-items div:hover {
    background-color: #e9e9e9; 
  }
  
  /*when navigating through the items using the arrow keys:*/
  .autocomplete-active {
    background-color: DodgerBlue !important; 
    color: #ffffff; 
  }
  </style>
<body>
  <%- include('./partials/_header'); %>
  <div class="text-center">
    <h1>Agregar Vino</h1>
  </div>
  <div class="container">
    <div class="row px-5">
      <% if(typeof id !== 'undefined') { %>
        <div class="alert alert-success" role="alert">
          Insertado vino correctamente con id <%= id %>
        </div>
      <% } %> 
      <% if(typeof alert != 'undefined') { %> 
        <% alert.forEach( (error) => { %>
          <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <%= error.msg %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% }); %> 
      <% } %>
      <form class="needs-validation was-validated" action="/vino/agregarVino" enctype="multipart/form-data" method="POST">
        <div class="row mt-1">
          <label for="validationCustom01" class="form-label">Nombre</label>
          <input class="form-control" id="validationCustom01" minlength="1" maxlength="50" type="text" name="nombre" value="<%= typeof(body) !== 'undefined' ? body.nombre : ''%>"
            required />
        </div>
        <div class="row mt-1">
          <label for="añada" class="form-label">Añada</label>
          <input class="form-control" id="añada" min="1800" max="<%= new Date().getFullYear() %>" type="number" name="añada" value="<%= typeof(body) !== 'undefined' ? body.añada : ''%>"
            required />
        </div>
        <div class="row mt-1">
          <label for="validationCustom02" class="form-label">Grado alcoholico:</label>
          <input class="form-control" id="validationCustom02" name="gradoAlcohol" value="<%= typeof(body) !== 'undefined' ? body.gradoAlcohol : ''%>"
            type="number" step="0.01" min="5" max="20" required />
        </div>
        <div class="row mt-1 autocomplete">

          <label for="validationCustom03" class="form-label">Bodega:</label>
          <input class="form-control" id="validationCustom03" minlength="1" maxlength="50" name="bodega" value="<%= typeof(body) !== 'undefined' ? body.bodega : ''%>" type="text"
            required />

          <!-- 
          <label for="validationCustom03_1" class="form-label">Id Bodega:</label>
          <input class="form-control" id="validationCustom03_1" min="1" step="1" name="bodega" value="<%= typeof(body) !== 'undefined' ? body.bodegaID : ''%>" type="number"
            required />
          -->
        </div>
        <div class="row mt-1">
          <label for="validationCustom04" class="form-label">Localidad:</label>
          <input class="form-control" id="validationCustom04" minlength="1" maxlength="50" name="localidad" value="<%= typeof(body) !== 'undefined' ? body.localidad : ''%>" type="text"
            required />

        </div>
        <div class="row mt-1">
          <label for="selectClase" class="form-label">Clase:</label>
          <select id="selectClase" class="selectpicker form-select" name="clase" value="<%= typeof(body) !== 'undefined' ? body.clase : ''%>" data-style="btn-danger">
            <option>Blanco</option>
            <option>Rosado</option>
            <option>Tinto</option>
            <option>Clarete</option>
            <option>Blanc de blanc</option>
            <option>Blanc de noirs</option>
            <option>Vino de nueces</option>
            <option>Vino especiado</option>
            <option>Vino oloroso</option>
          </select>
        </div>
        <div class="row mt-1">
          <label for="tipo" class="form-label">Tipo:</label>
          <input id="tipo" class="form-control" type="text" name="tipo" value="<%= typeof(body) !== 'undefined' ? body.tipo : ''%>" readonly/>
        </div>
        <div class="row mt-1">
          <label for="selectMaceracion" class="form-label">Maceración:</label>
          <select id="selectMaceracion" class="selectpicker form-select" name="maceracion" value="<%= typeof(body) !== 'undefined' ? body.maceracion : ''%>" data-style="btn-danger">
            <option>Crianza</option>
            <option>Joven</option>
            <option>Roble</option>
            <option>Reserva</option>
            <option>Gran Reserva</option>
          </select>
        </div>

        <div class="row mt-1">          
          <label for="variedad" class="form-label">Variedad:</label>
          <div id="js-input-variedad" class="p-0">
            <input type="hidden" class="form-control" name="variedad" id="variedad" value="<%= typeof(body) !== 'undefined' ? body.variedad : '{}'%>">
            <div class="table-responsive">
              <table class="table table-hover table-dark w-auto">
                <thead>
                  <tr>
                    <th>Nombre</th>
                    <th>Porcentaje</th>
                    <th></th>
                    <th></th>
                  </tr>
                </thead>
                <tbody id="containerVariedad">
                </tbody>
                <tfoot>
                  <tr>
                    <td colspan="3">
                      <div class="input-group">
                        <input type="text" minlength="1" maxlength="25" class="form-control" placeholder="Nombre..." id="nameVariedad">
                      </div>
                    </td>
                    <td><button id="addVariedad" class="btn btn-info" type="button"><i class="bi bi-plus-circle"></i></button></td>
                  </tr>
                </tfoot>
              </table>
            </div>
          </div>
        </div>

        <div class="row mt-1">
          <label for="file" class="form-label">Imagen:</label>
          <input type="file" name="imagen" value="<%= typeof(body) !== 'undefined' ? body.imagen : '' %>" class="form-control" accept="image/png,image/jpeg" />
        </div>
        <div class="row mt-4">
          <div class="col d-grid">
            <button type="submit" class="btn menu boton-buscar btn-dark">
              <h2>Agregar</h2>
            </button>
          </div>
          <div class="col d-grid">
            <a type="button" href="/" class="btn btn-lg btn-dark">
              <h2>Volver</h2>
            </a>
          </div>
        </div>
      </form>
    </div>
  </div>
  <script type="text/javascript" src="/static/javascripts/vino_variante.js"></script>
  <script type="text/javascript">
    document.addEventListener("DOMContentLoaded", () => {
      validarFormulario();
      cambiarTipoSegunClase();

      function validarFormulario() {
        const forms = document.querySelectorAll(".needs-validation");
        // Loop over them and prevent submission
        forms.forEach((form) => {
          form.addEventListener("submit", (event) => {
            if (!form.checkValidity()) {
              event.preventDefault();
              event.stopPropagation();
            }
          },false);
        });
      }

      function cambiarTipoSegunClase() {
        let selector = document.querySelector("#selectClase");
        let tipo = document.querySelector("#tipo");
        let tiposVinos = [
          "Tranquilo",
          "Espumoso",
          "Espirituoso",
          "Vino oloroso",
        ];
        let clases = {
          "Blanco": 0,
          "Rosado": 0,
          "Tinto": 0,
          "Clarete": 0,
          "Blanc de blanc": 1,
          "Blanc de noirs": 1,
          "Vino de nueces": 2,
          "Vino especiado": 2,
          "Vino oloroso": 3,
        };
        selector.addEventListener("change", (evt) => changeTipo(evt.currentTarget.value));
        changeTipo(selector.value);

        function changeTipo(val) {
          tipo.value = clases.hasOwnProperty(val) ?
            tiposVinos[clases[val]] :
            tiposVinos[3];
        }
      }
    });

    var decodeHtmlEntity = function(x) {
      return x.replace(/&#(\d+);/g, function(match, dec) {
        return String.fromCharCode(dec);
      });
    };

    function autocomplete(inp, arr) {
      let bodegas = decodeHtmlEntity(arr);
      bodegas = JSON.parse(bodegas);
      /*the autocomplete function takes two arguments,
      the text field element and an array of possible autocompleted values:*/
      var currentFocus;
      /*execute a function when someone writes in the text field:*/
      inp.addEventListener("input", function(e) {
          var a, b, i, val = this.value;
          /*close any already open lists of autocompleted values*/
          closeAllLists();
          if (!val) { return false;}
          currentFocus = -1;
          /*create a DIV element that will contain the items (values):*/
          a = document.createElement("DIV");
          a.setAttribute("id", this.id + "autocomplete-list");
          a.setAttribute("class", "autocomplete-items");
          /*append the DIV element as a child of the autocomplete container:*/
          this.parentNode.appendChild(a);
          /*for each item in the array...*/
          for (i = 0; i < bodegas.length; i++) {
            /*check if the item starts with the same letters as the text field value:*/
            if (bodegas[i].nombre.substr(0, val.length).toUpperCase() == val.toUpperCase()) {
              /*create a DIV element for each matching element:*/
              b = document.createElement("DIV");
              /*make the matching letters bold:*/
              b.innerHTML = bodegas[i].id + " - <strong>" + bodegas[i].nombre.substr(0, val.length) + "</strong>";
              b.innerHTML += bodegas[i].nombre.substr(val.length);
              /*insert a input field that will hold the current array item's value:*/
              b.innerHTML += "<input type='hidden' value='" + bodegas[i].nombre + "'>";
              /*execute a function when someone clicks on the item value (DIV element):*/
              b.addEventListener("click", function(e) {
                  /*insert the value for the autocomplete text field:*/
                  inp.value = this.getElementsByTagName("input")[0].value;
                  /*close the list of autocompleted values,
                  (or any other open lists of autocompleted values:*/
                  closeAllLists();
              });
              a.appendChild(b);
            }
          }
      });
      /*execute a function presses a key on the keyboard:*/
      inp.addEventListener("keydown", function(e) {
          var x = document.getElementById(this.id + "autocomplete-list");
          if (x) x = x.getElementsByTagName("div");
          if (e.keyCode == 40) {
            /*If the arrow DOWN key is pressed,
            increase the currentFocus variable:*/
            currentFocus++;
            /*and and make the current item more visible:*/
            addActive(x);
          } else if (e.keyCode == 38) { //up
            /*If the arrow UP key is pressed,
            decrease the currentFocus variable:*/
            currentFocus--;
            /*and and make the current item more visible:*/
            addActive(x);
          } else if (e.keyCode == 13) {
            /*If the ENTER key is pressed, prevent the form from being submitted,*/
            e.preventDefault();
            if (currentFocus > -1) {
              /*and simulate a click on the "active" item:*/
              if (x) x[currentFocus].click();
            }
          }
      });
      function addActive(x) {
        /*a function to classify an item as "active":*/
        if (!x) return false;
        /*start by removing the "active" class on all items:*/
        removeActive(x);
        if (currentFocus >= x.length) currentFocus = 0;
        if (currentFocus < 0) currentFocus = (x.length - 1);
        /*add class "autocomplete-active":*/
        x[currentFocus].classList.add("autocomplete-active");
      }
      function removeActive(x) {
        /*a function to remove the "active" class from all autocomplete items:*/
        for (var i = 0; i < x.length; i++) {
          x[i].classList.remove("autocomplete-active");
        }
      }
      function closeAllLists(elmnt) {
        /*close all autocomplete lists in the document,
        except the one passed as an argument:*/
        var x = document.getElementsByClassName("autocomplete-items");
        for (var i = 0; i < x.length; i++) {
          if (elmnt != x[i] && elmnt != inp) {
            x[i].parentNode.removeChild(x[i]);
          }
        }
      }
      /*execute a function when someone clicks in the document:*/
      document.addEventListener("click", function (e) {
          closeAllLists(e.target);
      });
    }

    /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
    autocomplete(document.getElementById("validationCustom03"), '<%=bodega%>');
    
  </script>
  <%- include('./partials/_footer'); %>
</body>

</html>